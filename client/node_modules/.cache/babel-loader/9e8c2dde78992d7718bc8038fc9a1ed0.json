{"ast":null,"code":"import _slicedToArray from \"/Users/JoshFaison/gamr-database-react-app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/JoshFaison/gamr-database-react-app/client/src/components/Screenshots.js\";\n\nimport React, { useState } from \"react\";\nimport { Container, Row, Col, Carousel, CarouselItem, CarouselControl } from \"reactstrap\";\n\nvar ScreenShots = function ScreenShots(props) {\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      activeIndex = _useState2[0],\n      setActiveIndex = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      animating = _useState4[0],\n      setAnimating = _useState4[1];\n\n  var next = function next() {\n    if (animating) return;\n    var nextIndex = activeIndex === props.screenshots.length - 1 ? 0 : activeIndex + 1;\n    setActiveIndex(nextIndex);\n  };\n\n  var previous = function previous() {\n    if (animating) return;\n    var nextIndex = activeIndex === 0 ? props.screenshots.length - 1 : activeIndex - 1;\n    setActiveIndex(nextIndex);\n  };\n\n  var goToIndex = function goToIndex(newIndex) {\n    if (animating) return;\n    setActiveIndex(newIndex);\n  };\n\n  return /*#__PURE__*/React.createElement(Container, {\n    className: \"bg-black\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    sm: \"12\",\n    md: {\n      size: 10,\n      offset: 1\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default ScreenShots;","map":{"version":3,"sources":["/Users/JoshFaison/gamr-database-react-app/client/src/components/Screenshots.js"],"names":["React","useState","Container","Row","Col","Carousel","CarouselItem","CarouselControl","ScreenShots","props","activeIndex","setActiveIndex","animating","setAnimating","next","nextIndex","screenshots","length","previous","goToIndex","newIndex","size","offset"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SACEC,SADF,EAEEC,GAFF,EAGEC,GAHF,EAIEC,QAJF,EAKEC,YALF,EAMEC,eANF,QAOO,YAPP;;AASA,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,KAAD,EAAW;AAAA,kBACSR,QAAQ,CAAC,CAAD,CADjB;AAAA;AAAA,MACtBS,WADsB;AAAA,MACTC,cADS;;AAAA,mBAEKV,QAAQ,CAAC,KAAD,CAFb;AAAA;AAAA,MAEtBW,SAFsB;AAAA,MAEXC,YAFW;;AAI7B,MAAMC,IAAI,GAAG,SAAPA,IAAO,GAAM;AACjB,QAAIF,SAAJ,EAAe;AACf,QAAMG,SAAS,GACbL,WAAW,KAAKD,KAAK,CAACO,WAAN,CAAkBC,MAAlB,GAA2B,CAA3C,GAA+C,CAA/C,GAAmDP,WAAW,GAAG,CADnE;AAEAC,IAAAA,cAAc,CAACI,SAAD,CAAd;AACD,GALD;;AAOA,MAAMG,QAAQ,GAAG,SAAXA,QAAW,GAAM;AACrB,QAAIN,SAAJ,EAAe;AACf,QAAMG,SAAS,GACbL,WAAW,KAAK,CAAhB,GAAoBD,KAAK,CAACO,WAAN,CAAkBC,MAAlB,GAA2B,CAA/C,GAAmDP,WAAW,GAAG,CADnE;AAEAC,IAAAA,cAAc,CAACI,SAAD,CAAd;AACD,GALD;;AAOA,MAAMI,SAAS,GAAG,SAAZA,SAAY,CAACC,QAAD,EAAc;AAC9B,QAAIR,SAAJ,EAAe;AACfD,IAAAA,cAAc,CAACS,QAAD,CAAd;AACD,GAHD;;AAKA,sBACE,oBAAC,SAAD;AAAW,IAAA,SAAS,EAAC,UAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAC,IAAR;AAAa,IAAA,EAAE,EAAE;AAAEC,MAAAA,IAAI,EAAE,EAAR;AAAYC,MAAAA,MAAM,EAAE;AAApB,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CADF;AAiCD,CAxDD;;AA0DA,eAAed,WAAf","sourcesContent":["import React, { useState } from \"react\";\nimport {\n  Container,\n  Row,\n  Col,\n  Carousel,\n  CarouselItem,\n  CarouselControl,\n} from \"reactstrap\";\n\nconst ScreenShots = (props) => {\n  const [activeIndex, setActiveIndex] = useState(0);\n  const [animating, setAnimating] = useState(false);\n\n  const next = () => {\n    if (animating) return;\n    const nextIndex =\n      activeIndex === props.screenshots.length - 1 ? 0 : activeIndex + 1;\n    setActiveIndex(nextIndex);\n  };\n\n  const previous = () => {\n    if (animating) return;\n    const nextIndex =\n      activeIndex === 0 ? props.screenshots.length - 1 : activeIndex - 1;\n    setActiveIndex(nextIndex);\n  };\n\n  const goToIndex = (newIndex) => {\n    if (animating) return;\n    setActiveIndex(newIndex);\n  };\n\n  return (\n    <Container className=\"bg-black\">\n      <Row>\n        <Col sm=\"12\" md={{ size: 10, offset: 1 }}>\n          {/* <Carousel activeIndex={activeIndex} next={next} previous={previous}>\n            {props.screenshots\n              ? props.screenshots.map((screenshot) => {\n                  return (\n                    <CarouselItem\n                      onExiting={() => setAnimating(true)}\n                      onExited={() => setAnimating(false)}\n                      key={screenshot.src}\n                    >\n                      <img src={screenshot.url} />\n                    </CarouselItem>\n                  );\n                })\n              : \"\"}\n            <CarouselControl\n              direction=\"prev\"\n              directionText=\"Previous\"\n              onClickHandler={previous}\n            />\n            <CarouselControl\n              direction=\"next\"\n              directionText=\"Next\"\n              onClickHandler={next}\n            />\n          </Carousel> */}\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n\nexport default ScreenShots;\n"]},"metadata":{},"sourceType":"module"}