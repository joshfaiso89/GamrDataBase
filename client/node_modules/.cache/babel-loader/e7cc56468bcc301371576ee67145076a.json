{"ast":null,"code":"import _objectSpread from \"/Users/JoshFaison/gamr-database-react-app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/Users/JoshFaison/gamr-database-react-app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/JoshFaison/gamr-database-react-app/client/src/components/Screenshots.js\";\n\nimport React, { useState, useEffect } from 'react';\nimport { Carousel, CarouselItem, CarouselControl, CarouselIndicators, CarouselCaption } from 'reactstrap';\nimport { set } from 'mongoose';\n\nvar ScreenShots = function ScreenShots(props) {\n  var _useState = useState({\n    arrayURL: []\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      screenshotState = _useState2[0],\n      setscreenshotState = _useState2[1];\n\n  var _useState3 = useState(0),\n      _useState4 = _slicedToArray(_useState3, 2),\n      countState = _useState4[0],\n      setcountState = _useState4[1];\n\n  useEffect(function () {\n    var display = props.gameData != undefined ? props.gameData.screenshots : '';\n    var items = props.gameData != undefined ? setscreenshotState(_objectSpread({}, setscreenshotState, {\n      arrayURL: props.gameData.screenshots\n    })) : \"\";\n\n    if (countState < screenshotState.arrayURL.length) {\n      setscreenshotState(_objectSpread({}, screenshotState, {\n        arrayURL: items\n      }));\n      var _newArrayList = [];\n    }\n\n    var newItems = screenshotState.arrayURL.map(function (screenshot) {\n      console.log(screenshot.url, \"URL IMAGES HERE\");\n      return newArrayList.push({\n        src: screenshot.url\n      });\n    });\n    console.log(newItems, \"newARRRAY\");\n    if (countState > scre) setcountState(countState + 1);\n  }, [countState]);\n\n  var _useState5 = useState(0),\n      _useState6 = _slicedToArray(_useState5, 2),\n      activeIndex = _useState6[0],\n      setActiveIndex = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      animating = _useState8[0],\n      setAnimating = _useState8[1];\n\n  var next = function next() {\n    if (animating) return;\n    var nextIndex = activeIndex === screenshotState.arrayURL.length - 1 ? 0 : activeIndex + 1;\n    setActiveIndex(nextIndex);\n  };\n\n  var previous = function previous() {\n    if (animating) return;\n    var nextIndex = activeIndex === 0 ? screenshotState.arrayURL.length - 1 : activeIndex - 1;\n    setActiveIndex(nextIndex);\n  };\n\n  var goToIndex = function goToIndex(newIndex) {\n    if (animating) return;\n    setActiveIndex(newIndex);\n  };\n\n  var slides = screenshotState.arrayURL.map(function (item) {\n    return /*#__PURE__*/React.createElement(CarouselItem, {\n      onExiting: function onExiting() {\n        return setAnimating(true);\n      },\n      onExited: function onExited() {\n        return setAnimating(false);\n      },\n      key: item.src,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: item.src,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }\n    }));\n  });\n  return /*#__PURE__*/React.createElement(Carousel, {\n    activeIndex: activeIndex,\n    next: next,\n    previous: previous,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(CarouselIndicators, {\n    items: screenshotState.arrayURL,\n    activeIndex: activeIndex,\n    onClickHandler: goToIndex,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }\n  }), slides, /*#__PURE__*/React.createElement(CarouselControl, {\n    direction: \"prev\",\n    directionText: \"Previous\",\n    onClickHandler: previous,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(CarouselControl, {\n    direction: \"next\",\n    directionText: \"Next\",\n    onClickHandler: next,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default ScreenShots;","map":{"version":3,"sources":["/Users/JoshFaison/gamr-database-react-app/client/src/components/Screenshots.js"],"names":["React","useState","useEffect","Carousel","CarouselItem","CarouselControl","CarouselIndicators","CarouselCaption","set","ScreenShots","props","arrayURL","screenshotState","setscreenshotState","countState","setcountState","display","gameData","undefined","screenshots","items","length","newArrayList","newItems","map","screenshot","console","log","url","push","src","scre","activeIndex","setActiveIndex","animating","setAnimating","next","nextIndex","previous","goToIndex","newIndex","slides","item"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n  Carousel,\n  CarouselItem,\n  CarouselControl,\n  CarouselIndicators,\n  CarouselCaption\n} from 'reactstrap';\nimport { set } from 'mongoose';\n\n\n\nconst ScreenShots = (props) => {\n  const [screenshotState, setscreenshotState] = useState({\n    arrayURL : []\n \n  });\n\n  const [countState, setcountState] = useState(0)\n  useEffect(() => {\n    let display = \n    props.gameData != undefined ?  \n   props.gameData.screenshots : '';\n  \n    let items = props.gameData != undefined ? setscreenshotState({\n      ...setscreenshotState, \n      arrayURL : props.gameData.screenshots\n    })  \n    \n    \n    : \"\";\n\n     if(countState <  screenshotState.arrayURL.length) {\n       setscreenshotState({\n         ...screenshotState,\n         arrayURL : items\n         \n      });\n\n      let newArrayList = []\n\n      \n    } \n  \n  \n    let newItems = screenshotState.arrayURL.map(screenshot => {\n      console.log(screenshot.url, \"URL IMAGES HERE\")\n      return (\n        newArrayList.push({\n          src: screenshot.url \n        })\n      )\n    })\n    console.log(newItems, \"newARRRAY\")\n\n  \n    if(countState > scre)\n      setcountState(countState +1)\n  }, [countState]) \n\n\n\n  const [activeIndex, setActiveIndex] = useState(0);\n  const [animating, setAnimating] = useState(false);\n\n  const next = () => {\n    if (animating) return;\n    const nextIndex = activeIndex === screenshotState.arrayURL.length - 1 ? 0 : activeIndex + 1;\n    setActiveIndex(nextIndex);\n  }\n\n  const previous = () => {\n    if (animating) return;\n    const nextIndex = activeIndex === 0 ? screenshotState.arrayURL.length - 1 : activeIndex - 1;\n    setActiveIndex(nextIndex);\n  }\n\n  const goToIndex = (newIndex) => {\n    if (animating) return;\n    setActiveIndex(newIndex);\n  }\n\n  const slides = screenshotState.arrayURL.map((item) => {\n    return (\n      <CarouselItem\n        onExiting={() => setAnimating(true)}\n        onExited={() => setAnimating(false)}\n        key={item.src}\n      >\n        <img src={item.src} />\n      </CarouselItem>\n    );\n  });\n\n  return (\n    <Carousel\n      activeIndex={activeIndex}\n      next={next}\n      previous={previous}\n    >\n      <CarouselIndicators items={screenshotState.arrayURL} activeIndex={activeIndex} onClickHandler={goToIndex} />\n      {slides}\n      <CarouselControl direction=\"prev\" directionText=\"Previous\" onClickHandler={previous} />\n      <CarouselControl direction=\"next\" directionText=\"Next\" onClickHandler={next} />\n    </Carousel>\n  );\n}\n\nexport default ScreenShots;"]},"metadata":{},"sourceType":"module"}